# Terraform release pipeline
variables:
  # Directory of terraform files in repo
  tf_directory: "lecture7"
  terraform_version: "0.14.7"
  tflint_version: "0.25.0"

  # Create this environment and set approval on it to the environment owners group
  tf_approval_environment: "TerraformApprovalEnv"

  tf_init_command_options: "-input=false"
  tf_validate_command_options: ""
  tf_refresh_command_options: "-input=false -lock=false"
  tf_plan_command_options: "-input=false -lock=false -refresh=false -out plan.out"
  tf_apply_command_options: "-auto-approve -input=false -refresh=false"

# Set the pool
pool:
  vmImage: "ubuntu-latest"

# Automatically trigger pipeline when master branch updated (PR merged) in $(tf_directory) path
trigger:
  branches:
    include:
      - master
  paths:
    include:
      - $(tf_directory)

# Release instructions
stages:
  - stage: Terraform_Plan
    jobs:
      - deployment: Terraform_Plan
        displayName: Terraform_Plan
        workspace:
          clean: all
        continueOnError: "false"
        environment: "TerraformPlan_Environment"
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: Bash@3
                  displayName: "Install pre-reqs"
                  inputs:
                    targetType: inline
                    workingDirectory: $(system.DefaultWorkingDirectory)/lecture7
                    failOnStderr: false
                    script: |
                      wget https://github.com/terraform-linters/tflint/releases/download/v$(tflint_version)/tflint_linux_amd64.zip
                      unzip tflint_linux_amd64.zip
                      sudo mv tflint /usr/local/
                - task: Bash@3
                  displayName: "Terraform Init"
                  inputs:
                    targetType: inline
                    workingDirectory: $(system.DefaultWorkingDirectory)/lecture7
                    failOnStderr: false
                    script: 'terraform init -backend-config="access_key=UO9J14bMFOT6SA1p2s5JBRYFwtcC6Jn/2RDoqSA/f6FJ+m8PdpqLda9Zk8TJyRSxZ7zAQr+4tat9+AStgW576A=="'
                - task: Bash@3
                  displayName: "Terraform Validation"
                  inputs:
                    targetType: inline
                    workingDirectory: $(system.DefaultWorkingDirectory)/lecture7
                    failOnStderr: false
                    script: "terraform validate $(tf_validate_command_options)"
                - task: Bash@3
                  displayName: "Terraform Refresh"
                  inputs:
                    targetType: inline
                    workingDirectory: $(system.DefaultWorkingDirectory)/lecture7
                    failOnStderr: false
                    script: "terraform refresh $(tf_refresh_command_options)"
                - task: Bash@3
                  displayName: "Terraform Plan"
                  inputs:
                    targetType: inline
                    workingDirectory: $(system.DefaultWorkingDirectory)/lecture7
                    failOnStderr: false
                    script: "terraform plan $(tf_plan_command_options)"
